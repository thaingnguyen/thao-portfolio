---
import { Icon } from 'astro-icon/components';
import { getImage, type ImageMetadata } from 'astro:assets';

// Component Props
interface Project {
  id: number;
  title: string;
  role: string;
  challenge: string;
  solution: string[];
  impact: { value: string; label: string }[];
  media: ImageMetadata | string;
  icon: string;
  preview: {
    value: string;
    label: string;
    title: string;
  };
}

interface Props {
  showcaseId: string;
  title: string;
  subtitle: string;
  projects: Project[];
  highlightColor?: 'blue' | 'pink';
}

const {
  showcaseId,
  title,
  subtitle,
  projects,
  highlightColor = 'blue'
} = Astro.props;

// Normalize images so both local (ImageMetadata) and remote strings
// resolve to an object with a consistent `attributes` shape.
const processedImages = await Promise.all(
  projects.map(async (project) => {
    const media = project.media?.default ?? project.media;

    if (typeof media === 'object' && media !== null && 'src' in media) {
      const img = await getImage({
        src: media as ImageMetadata,
        width: 800,
        height: 600,
        format: 'webp'
      });

      const attrs = (img as any).attributes ?? {};
      return {
        ...img,
        attributes: {
          ...attrs,
          src: img.src,
          width: attrs.width ?? (img as any).width ?? 800,
          height: attrs.height ?? (img as any).height ?? 600
        }
      };
    }

    const src = String(media);
    return {
      src,
      attributes: { src, width: 800, height: 600 }
    };
  })
);

// Define color classes based on the highlightColor prop
const colorClasses = {
  blue: {
    text: 'text-accent-primary-strong',
    border: 'border-accent-primary-strong',
    icon: 'text-accent-primary',
    badge: 'bg-badge-primary text-white'
  },
  pink: {
    text: 'text-accent-secondary',
    border: 'border-accent-secondary',
    icon: 'text-accent-secondary',
    badge: 'bg-badge-secondary text-white'
  }
};

const colors = colorClasses[highlightColor];
---

<!-- Showcase Section -->
<section id={showcaseId} class="bg-surface-elevated py-20 px-4 sm:px-6 lg:px-8">
  <div class="max-w-7xl mx-auto">
    <header class="text-center mb-12">
      <h2 class="text-4xl md:text-5xl font-bold tracking-tight text-foreground">{title}</h2>
      <p class="text-foreground-muted mt-4 text-lg">{subtitle}</p>
    </header>

    <div
      id={`${showcaseId}-carousel-container`}
      class="embla group relative bg-surface-alt rounded-2xl shadow-lg overflow-hidden"
      data-project-showcase={showcaseId}
      data-highlight-color={highlightColor}
    >
      <div class="embla__thumbs px-4 py-5 md:flex md:justify-center md:gap-6 md:py-6">
        <div class="embla__thumbs__viewport overflow-x-hidden overflow-y-visible md:overflow-visible md:contents">
          <div class="embla__thumbs__container flex gap-4 pe-6 md:pe-0 md:gap-8 md:contents">
            {projects.map((project, index) => (
              <button
                type="button"
                class:list={[
                  'embla__slide embla__thumbs__slide',
                  'flex flex-col items-center justify-center gap-2',
                  'rounded-xl border-2 text-foreground',
                  'transition-all duration-200 ease-out',
                  'min-w-[66%] px-4 py-6 sm:min-w-[10rem] md:min-w-[12rem] md:py-6',
                  'md:hover:-translate-y-1 md:hover:shadow-[0_12px_28px_rgba(15,23,42,0.16)]',
                  'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-white/70 focus-visible:md:-translate-y-1',
                  'w-full flex-shrink-0',
                  'flex-[0_0_66%] max-w-[66%] sm:flex-[0_0_calc(100%/1.5)] sm:max-w-[calc(100%/1.5)] md:flex-[0_0_calc((100%-8rem)/4)] md:max-w-[calc((100%-8rem)/4)]',
                  'cursor-pointer',
                  'bg-surface-alt',
                  index === 0
                    ? [
                        'shadow-none',
                        'md:shadow-[0_16px_32px_rgba(15,23,42,0.18)]',
                        'translate-y-0',
                        'md:-translate-y-1',
                        colors.border
                      ]
                    : [
                        'shadow-none',
                        'md:shadow-[0_6px_18px_rgba(15,23,42,0.12)]',
                        'translate-y-0',
                        'border-[color:rgb(var(--rgb-surface-overlay)/0.6)]'
                      ]
                ]}
                data-index={index}
                data-id={project.id}
              >
                <div class:list={['w-full justify-center mb-2 hidden md:flex', colors.icon]}>
                  <Icon name={project.icon} class="w-6 h-6" />
                </div>
                <p class="sm:text-lg md:text-2xl font-bold text-secondary" set:html={project.preview.title} />
              </button>
            ))}
          </div>
        </div>
      </div>

      <div class="embla__viewport overflow-hidden">
        <div class="embla__container flex">
          {projects.map((project, index) => (
            <div class="embla__slide flex flex-col p-6 sm:p-8 lg:p-12 flex-[0_0_100%] min-w-0">
              
              <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12 items-center flex-1">
                <div class="text-foreground-secondary order-2 lg:order-1 flex flex-col">
                  <p
                    class:list={[
                      'inline-block px-3 py-1 rounded-md text-sm mb-6 self-start uppercase',
                      colors.icon,
                      colors.badge
                    ]}
                  >
                    {project.role}
                  </p>
                  <h3 class="text-2xl sm:text-3xl font-bold text-foreground mb-2">
                    {project.title}
                  </h3>

                  <div class="description-wrapper">
                    <h4 class:list={['font-semibold mb-2', colors.text]}>
                      The Challenge
                      </h4>
                    <p class="mb-6 text-base leading-relaxed text-foreground-muted">
                      {project.challenge}
                    </p>
                    <h4 class:list={['font-semibold mb-2', colors.text]}>
                      My Approach & Solution
                    </h4>
                    <ul class="space-y-3 text-base leading-relaxed text-foreground-muted">
                      {project.solution.map((item) => (
                        <li class="flex items-start">
                          <span class={`flex-shrink-0 w-6 h-6 mr-2 ${colors.text}`}>
                            <Icon name="checkbox" class="w-6 h-6 mt-0.5" />
                          </span>
                          <span set:html={item} />
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>

                <div class="w-full h-auto aspect-video rounded-lg overflow-hidden bg-surface-overlay order-1 lg:order-2">
                  <img
                    {...processedImages[index].attributes}
                    alt={`${project.title} media`}
                    class="w-full h-full object-cover"
                  />
                </div>
              </div>

              <div class="mt-auto pt-6">
                <div class="w-full h-px bg-surface-overlay/80 mb-6"></div>
                <div class="grid grid-cols-3 gap-4 sm:gap-8 text-center">
                  {project.impact.map((metric) => (
                    <div>
                      <p class:list={['text-3xl sm:text-4xl lg:text-6xl font-black tracking-tighter', colors.text]}>
                        {metric.value}
                      </p>
                      <p class="text-foreground-muted text-xs sm:text-sm mt-1">{metric.label}</p>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <button
        type="button"
        class="embla__prev embla__button absolute top-1/2 left-2 sm:left-4 -translate-y-1/2 bg-surface-alt/50 hover:bg-surface-alt/80 text-foreground rounded-full p-2 transition-opacity opacity-0 group-hover:opacity-100 focus:opacity-100 z-10 border border-surface-overlay shadow-lg flex items-center justify-center pointer-events-none group-hover:pointer-events-auto focus:pointer-events-auto disabled:opacity-40 disabled:pointer-events-none focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-white"
        aria-label="Previous project"
      >
        <Icon name="chevron-left" class="w-6 h-6" />
      </button>
      <button
        type="button"
        class="embla__next embla__button absolute top-1/2 right-2 sm:right-4 -translate-y-1/2 bg-surface-alt/50 hover:bg-surface-alt/80 text-foreground rounded-full p-2 transition-opacity opacity-0 group-hover:opacity-100 focus:opacity-100 z-10 border border-surface-overlay shadow-lg flex items-center justify-center pointer-events-none group-hover:pointer-events-auto focus:pointer-events-auto disabled:opacity-40 disabled:pointer-events-none focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-white"
        aria-label="Next project"
      >
        <Icon name="chevron-right" class="w-6 h-6" />
      </button>
    </div>
  </div>
</section>

<script src="../../scripts/project-showcase-init.ts"></script>
